syntax = "proto3";

package org.fc.brewchain.ctrl.pbgens;

enum PRemoteCtrlModule {
	FBS = 0;
};
enum PRemoteCtrlCommand {
	INF = 0; //获取当前控制器的状态
	ADD = 1; //新增一个空余节点，暂时不用
	NEW = 2; //新建泛融链
	MOD = 3; //修改泛融链
	KLL = 4; //暂停或者删除泛融链
};


enum ENodeStatus{
	NS_RAW = 0;//什么都没有，原始状态
	NS_INIT = 1;//正在初始化
	NS_READY = 2;//已经可以使用
	NS_USED = 3;//已经被使用
	NS_DOWN = 4;//节点已经下架
	
	NS_DESTROY = 5;//废弃
	NS_RECYCLE = 6;//可回收
}

enum ENodeClusterStatus{
	NCS_RAW = 0;//什么都没有，原始状态
	NCS_INIT = 1;//正在初始化
	NCS_READY = 2;//已经可以使用
	NCS_DOWN = 4;//节点已经下架
	NCS_DESTROY = 5;//废弃
	NCS_RECYCLE = 6;//可回收
}

message PMNodeInfo{
	string ip = 1;//ip地址
	int32 port = 2;//端口
	string name = 3;//名称
	ENodeStatus status = 4;//状态
	string guid = 10;//全局id
}

message PMNodeClusterInfo{//节点集群信息
	ENodeClusterStatus status = 1;//状态
	
	repeated PMNodeInfo nodes = 2;//节点列表
	int32 max_storage_gsize = 3;//最大可以分配的共享存储空间大小
	string guid = 10;//全局id 
	
}

enum EConsensusType {//共识算法类型
	SINGLE = 0;//单节点
	RAFT = 1;//Raft集群
	PBFT = 2;//拜占庭算法
	POS = 3;//POS共识
	POW = 4;//
	
}

enum EChainStatus{
	FCS_RAW = 0;//什么都没有，原始状态
	FCS_INIT = 1;//正在初始化
	FCS_READY = 2;//已经可以使用
	FCS_DOWN = 4;//节点已经下架
	FCS_DESTROY = 5;//废弃
	FCS_RECYCLE = 6;//可回收
}

message PMChainInfo{
	
	string org = 1;//机构名称
	repeated PMNodeInfo nodes = 2;//节点列表
	EChainStatus status = 3;
	
	int64 current_height = 4;//当前高度
	repeated string mon_api_urls = 5;//链监控地址
	repeated string wallet_api_urls = 6;//钱包接口地址
	repeated string chain_api_urls = 7;//链接口地址
	int32 max_storage_gsize = 8;//最大可以分配的共享存储空间大小
	int32 max_network_msize = 9;//网络容量大小
	string guid = 10;//全局id
}


message PSCtrlInfo { //查询控制器状态
	int32 skip = 1;//
	int32 limit = 2;//
	string ver = 3;//版本，默认1.0.0
}

message PRetCtrlInfo //查询返回
{
	string ret_code = 1; //err_code
	string ret_msg = 2; //操作参数

	repeated PMNodeInfo nodes = 3;//节点列表
	repeated PMChainInfo chains = 4;//链的列表
}



message PSAddNode { //新增加一个空余节点
	repeated PMNodeInfo nodes = 3;//节点列表
}

message PRetAddNode //新增节点返回
{
	string ret_code = 1; //err_code
	string ret_msg = 2; //操作参数
	repeated PMNodeInfo nodes = 3;//节点列表
}

message PSNewChain { //新增加一个泛融链
	string name = 1;//链名称
	string node_cluster_guid = 3;//所需要操作的节点集群id
	int32 count = 4;//节点个数
	EConsensusType consus = 5;//共识算法
	int64 storage_gsize = 6;//所创建的共享空间大小
}

message PRetNewChain //新增泛融链
{
	string ret_code = 1; //err_code
	string ret_msg = 2; //操作参数
	PMChainInfo chain = 3;//节点列表
}



message PSModChain { //修改一个泛融链配置
	string chain_guid = 3;//所需要操作的泛融链id
	int32 mod_node_count = 4;//新增或者减少(+／-)的节点个数，
	int64 storage_gsize = 5;//所创建的共享空间大小
	int64 max_network_msize = 6;//网络容量大小
}

message PRetModChain //新增泛融链
{
	string ret_code = 1; //err_code
	string ret_msg = 2; //操作参数
	PMChainInfo chain = 3;//节点列表
}



message PSKillChain { //暂停或者删除一份链
	string chain_guid = 3;//所需要操作的节点集群id
	bool destroy = 4;//是否删除所有数据,释放所有资源
	
}

message PRetKillChain  //暂停或者删除一份链
{
	string ret_code = 1; //err_code
	string ret_msg = 2; //操作参数
	PMChainInfo chain = 3;//节点列表
}


